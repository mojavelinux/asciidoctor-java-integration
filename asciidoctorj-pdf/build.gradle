dependencies {
  compile project(':asciidoctorj')
  gems("rubygems:asciidoctor-pdf:$asciidoctorPdfGemVersion") {
    // Exclude gems provided by AsciidoctorJ core
    exclude module: 'asciidoctor'
    exclude module: 'thread_safe'
    // We must lock Prawn to 1.3.0 until AsciidoctorJ upgrades to JRuby 9.0.0.0
    exclude module: 'prawn'
  }
  gems "rubygems:prawn:$prawnGemVersion"
}

def gemFiles = fileTree(jruby.gemInstallDir) {
  include 'specifications/*.gemspec'
  include 'gems/*/lib/**'
  include "gems/*/data/fonts/*"
  include "gems/asciidoctor-pdf-$asciidoctorPdfGemVersion/data/**"
  // Accomodate Prawn's non-conforming packaging
  include "gems/prawn-$prawnGemVersion/VERSION"
  include "gems/prawn-$prawnGemVersion/data/*.txt"
  include "gems/prawn-$prawnGemVersion/data/encodings/*"
  // Include icon fonts
  include "gems/prawn-icon-*/fonts/*/*"
  // Include required data file from the addressable gem
  include "gems/addressable-*/data/*.data"
}

jrubyPrepareGems << {
  copy { // bundles the gems inside this artifact
    from gemFiles
    eachFile {
      if (it.path == 'gems/asciidoctor-pdf-1.5.0.alpha.8/lib/asciidoctor-pdf/prawn_ext/formatted_text/fragment.rb' ||
          it.path == 'gems/asciidoctor-pdf-1.5.0.alpha.8/lib/asciidoctor-pdf/formatted_text/inline_image_arranger.rb') {
        it.filter { line ->
          line.replaceAll(/^( *)if ::RUBY_MIN_VERSION_2$/, "\$1if respond_to? :prepend")
        }
      }
    }
    into sourceSets.main.output.resourcesDir
  }
}
